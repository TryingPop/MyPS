using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

/*
날짜 : 2023. 12. 10
이름 : 배성훈
내용 : 곱셈
    문제번호 : 1629번
*/

namespace BaekJoon._27
{
    internal class _27_04
    {

        static void Main4(string[] args)
        {


            /// 
            /// 3, 5, 7을 예를 들어 보자
            /// 기존에는
            /// 3, 5, 7을 연산하기 위해
            /// 매번 3을 5번 거듭제곱 계산하고 
            /// 저장 값이 커지는 것을 방지하기 위해 각 결과마다 7로 나눠준다
            /// 그리고 5번 계산 다하면 해당 결과를 출력
            /// 이를 과정으로 나타내면
            /// 1 * 3 % 7 = 3 ... 1번 제곱한 결과
            /// 3 * 3 % 7 = 2 ... 2번 제곱한 결과 
            /// 2 * 3 % 7 = 6 ... 3번 제곱한 결과
            /// 6 * 3 % 7 = 4 ... 4번 제곱한 결과
            /// 4 * 3 % 7 = 5 ... 5번 제곱한 결과
            /// 그래서 결과는 5
            /// 이 방법은 시간 복잡도가 O(n)이라 시간 초과!
            ///
            /// 정렬되어 있으므로 이분탐색과 비슷한 아이디어를 이용해 
            /// 시간 복잡도를 O(log_2 (n)) 으로 줄이는게 핵심
            /// 3, 5, 7 을
            /// 9, 2, 7 로하고 결과에 3을 곱해준다
            /// (9 > 7이므로 7로 나눈 나머지
            /// 9, 2, 7 을 2, 2, 7 로 바꿔도 같은 결과를 낸다)
            /// 그래서 2, 2, 7로 하고 결과에 3을 곱해준다
            /// 이는 4, 1, 7을 입력 받은 것과 같고 결과에 3을 곱해주면 된다
            /// 그러면 4 * 3 % 7 = 5 위와 같은 결과를 낸다
            /// 이를 과정으로 나타내면
            /// 3, 5, 7
            /// 2, 2, 7 결과에 3 곱하기
            /// 4, 1, 7 결과에 3 곱하기
            /// 4 * 3 % 7 = 5
            /// 그래서 결과는 5
            /// 반복하는 과정이 5 > 2번으로 줄었다
            ///

            // 입력
            // 입력 범위가 21억 단위이므로 곱셈연산에서 오버플로우가 일어나지 않게하기 위해 long으로 설정
            long[] input = Array.ConvertAll(Console.ReadLine().Split(' '), long.Parse);

            long result = 1;

            while (input[1] != 0)
            {

                if (input[1] % 2 == 1)
                {

                    result *= input[0];
                    result %= input[2];
                    input[1] -= 1;
                }

                input[1] /= 2;
                input[0] *= input[0];
                input[0] %= input[2];
            }



            Console.WriteLine(result);
        }
    }
}
